[[locations]]
failed = "{temp}/failed_bib"
chunked = "{temp}/chunked"

[[tasks.bib]]
name                   = "_chunker.split"
version                = "0.1"                       # <str>
ctor                   = "job"                      # <str>
mixins                 = ["job:terse", "job:walker"] # <list>               mix in additional capabilities
cli                    = [{ name="target", type="str", prefix="-", default=".", desc="", positional=false  }]
inject                 = ["target_bib_size"]                          # <list[str]>
queue_behaviour        = "default"                   # <str>                default | auto | reactive
exts                   = [".bib"]                          # <list[str]>
roots                  = ["{target}"]                     # <list[str|pl.Path]>  Places the Walker will start
recursive              = false                       # <bool>
target_bib_size        = 250
sub_actions            = [
                     { do="dootle.bibtex.v2:BibtexInitAction",   update_="bib_db"},
                     { do="taskcode.chunking:build_chunking_parse_stack",   update_="parse_stack"},
                     { do="dootle.bibtex.v2:BibtexLoadAction",   from_="fpath",     update_="bib_db",   parse_stack_="parse_stack" },
                     # convert to n * target_bib_size libraries
                     { do="taskcode.bibtex:split_library", from_="bib_db", update_="split_libs" },
                     # add to postbox
                     { do="putPost", args=["split_libs"] },
                     { do="dootle.bibtex.v2:BibtexFailedBlocksWriteAction", target="{failed}/failed_{fstem}.bib" },
]


[[tasks.bib]]
name                 = "chunker"
version              = "0.1"                # <str>
ctor                 = "job"               # <str>
mixins               = ["job:terse", "doot.mixins.job.postbox_expander:PostBoxExpanderMixin"] # <list>               mix in additional capabilities
inject               = []                   # <list[str]>
depends_on           = ["bib::_chunker.split", "bib::_chunker.split.$head$"]
queue_behaviour      = "default"            # <str>                default | auto | reactive
postbox              = {inject_key='data', task='bib::split', sub_key='-' }
sub_actions          = [
            # write library
            { do="taskcode.chunking:generate_stem", from_="data", update_="fstem"},
            { do="taskcode.bibtex:build_working_write_stack",  update_="write_stack" },
            { do="dootle.bibtex.v2:BibtexToStrAction",  from_="data", update_="bib_text", write_stack_="write_stack" },
            { do="write!", from_="bib_text", to="{chunked}/{fstem}.bib"},
]
