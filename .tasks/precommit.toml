## precommit.toml -*- mode: conf-toml -*-

[[locations]]

[[tasks.precommit]]
name     = "validate"
version  = "0.1"                # <str>
doc      = ["Validate a commit message"]
cli      = [{ name="msgfile",   default="", type="str", positional=true }]
ctor     = "task"               # <str>
actions  = [
         {do="read", from_="msgfile", update_="text"},
         {do="taskcode.precommit:validate", from_="text"}
]

[[tasks.precommit]]
name          = "pre"
doc           = ["Is passed a cli list of files changed, which are used to queue subtasks"]
ctor          = "job"
cli           = [{ name="files",   type="list", default=[], positional=true }]
depends_on    = []
actions       = [
   {do="log", msg="Formatting/Meta/Backup for : {files}"},
   {do="job.expand", prefix="format", from_="files", update_="format_tasks", inject={replace=["fpath"]}, template="format::_.by.year"},
   {do="job.queue", from_=["format_tasks"]},
]
cleanup       = [
   {do="log", msg="Finished"}
]

[[tasks.precommit]]
name       = "post"
doc        = []
ctor       = "job"
roots      = ["{bib}"]
exts       = [".bib"]
sub_target = "changed::_.one.bib"
select_limit = 10
depends_on = ["bookmark::update"]
actions    = [
   # if No cache, so just process the head changes:
   {do="dootle.utils.commit_caching:GetChangedFilesByCommit", update_="changed" },
   {do="job.limit", count="select_limit", from_="changed"},
   # Queue metadata update
   {do="job.expand", from_="changed", inject={replace=["fpath"]}, template="changed::_.one.bib", update_="bib_files"},
   {do="job.queue", from_=["bib_files"]},
]
cleanup = [
   "stub::cleanup"
   # TODO cache head commit hash
]
