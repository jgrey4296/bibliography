## precommit.toml -*- mode: toml -*-
doot-version = "0.13"

[[locations]]

[[tasks.precommit]]
name     = "validate"
version  = "0.1"                # <str>
doc      = ["Validate a commit message"]
cli      = [{ name="msgfile",   default="", type="str"}]
ctor     = "task"               # <str>
actions  = [
         {do="read", from_="msgfile", update_="text"},
         {do="taskcode.precommit:validate", from_="text"}
]

[[tasks.precommit]]
name          = "pre"
doc           = ["Is passed a cli list of files changed, which are used to queue subtasks"]
ctor          = "job"
cli           = [{ name="files",   type="list", default=[]}]
depends_on    = []
sub_task      = "format::_.single.file"
actions       = [
   {do="log", msg="Precommit for : {files}"},
   # {do="job.expand", prefix="format", from_="files", update_="format_tasks", inject={insert=["fpath"]}, template_="sub_task"},
   # {do="job.queue", from_=["format_tasks"]},
]
cleanup       = [
   {do="log", msg="Finished Pre-Commit Formatting"},
   {do="shell!", args=["notify-send",
                     "--expire-time=1000",
                     "--transient",
                     "Finished Pre-Commit Formatting"]},
]

[[tasks.precommit]]
name       = "post"
ctor       = "job"
cli        = [
           {name="files", type="list", default=[]},
           {name="choose", type="int", default=1},
           ]
roots      = ["{bib!p}"]
exts       = [".bib"]
sub_target = "changed::_.one.file"
actions    = [
   {do="log", msg="Starting Post Commit Process : {files}"},
   # if No cache, so just process the head changes:
   {do="dootle.utils.:GetChangedFilesByCommit", update_="changed"},
   {do="log", msg="Available changed files: {changed}"},
   {do="job.limit", count_="choose", from_="changed"},
   # Queue metadata update
   {do="job.expand", from_="changed", inject={insert=["fpath"]}, template="changed::_.one.file", update_="bib_files", prefix="git.cached"},
   {do="job.queue", from_=["bib_files"]},
]
cleanup = [
   "stub::cleanup",
   "bookmark::update",
   # TODO cache head commit hash
   {do="log", msg="Finished Post Commit Process"},
   {do="shell!", args=["notify-send",
                     "--expire-time=1000",
                     "--transient",
                     "Finished Bib Cleanup"]},
]
