## orphans.toml -*- mode: conf-toml -*-

[[locations]]
orphans = "{temp}/orphans"

[[tasks.orphans]] # starter
name    = "by.year"
doc     = ["compare a bibtex year to its pdf lib files"]
cli     = [{ name="fpath", type="str", prefix="-", default="", desc="", positional=false  }]
version = "0.1"
ctor    = "job"
setup = [
    {do="delete!", args=["{orphans}/bib.files"]},
    {do="delete!", args=["{orphans}/fs.files"]},
    {do="exists?", args=["{fpath}"], fail=true},
    {do="path.elements",   from_="fpath", roots=["{bib}"]},
]
actions = [
    {do="job.expand",      from_="fpath", update_="bibtasks", inject={replace=["fpath"]}, template="orphans::_.one.bib"},
    {do="job.expand",      from="{lib-root}/{fstem}", update_="fstasks", inject={replace=["fpath"], copy=["fstem"]}, template="orphans::_.filesystem"},
    {do="job.queue",       from_multi_=["bibtasks", "fstasks"]}
]
cleanup = ["orphans::_.report"]


[[tasks.orphans]]
name        = "_.one.bib"
doc         = ["get all files referenced by a bibtex file"]
cli         = [{ name="fpath", type="str", prefix="-", default="", desc="", positional=false  }]
ctor        = "task"
actions = [
    { do="ext?", args=["{fpath}"], exts=[".bib"] },
    { do="log", msg="Getting Files for: {fpath}"},
    { do="path.elements", from_="fpath" },
    { do="dootle.bibtex:BibtexInitAction",   update_="bib_db"},
    { do="taskcode.bibtex:build_working_parse_stack",  update_="parse_stack"},
    { do="dootle.bibtex:BibtexLoadAction",   from_="fpath",     update_="bib_db",   parse_stack_="parse_stack" },
    { do="taskcode.orphans:get_db_files", from_="bib_db" , update_="filelist"},
    { do="taskcode.orphans:format_filelist", from_="filelist", update_="formatted" },
    { do="append!", args=["{formatted}"], to="{orphans}/bib.files"},
]

[[tasks.orphans]]
name               = "_.filesystem"
doc                = ["walk the library filesystem, summarising all existing files"]
cli                = [{ name="fpath", type="str", prefix="-", default="{lib-root}", desc="", positional=false  }]
fpath              = "{lib-root}"
ctor               = "task"
version            = "0.1"
required_for       = [{loc="{orphans}/fs.files", file=true}]
roots              = ["{fpath}"]
exts               = [".pdf", ".epub"]
recursive          = true
actions            = [
    {do="log", msg="Walking: {fpath}"},
    {do="job.walk", update_="walked"}, # TODO: or use fdfind
    {do="taskcode.orphans:format_filelist", from_="walked", update_="files"},
    {do="append!", args=["{files}"], to="{orphans}/fs.files" }
]

[[tasks.orphans]]
name         = "_.report"
doc          = ["reports a diff of bib referenced files against the filesystem"]
ctor         = "task"
priority     = 1
# depends_on = ["file:>{orphans}/bib.files", "file:>{orphans}/fs.files"]
actions      = [
        # read file lists
        {do="read", from="{orphans}/bib.files", type="lines",  update_="bib"},
        {do="read", from="{orphans}/fs.files",  type="lines",  update_="fs"},
        # diff them
        {do="taskcode.orphans:diff_filelists"},
        # write results:
        {do="write!", from_="only_mentioned", to="{orphans}/only_mentioned.files"},
        {do="write!", from_="only_exists",    to="{orphans}/only_exists.files"},
]
