## orphans.toml -*- mode: conf-toml -*-

[[locations]]
orphans = "{temp}/orphans"


[[tasks.orphans]]
name    = "_.report.missing"
inject  = ["fpath", "postbox"]
setup   = [
    {do="exists?", args=["{fpath}"], fail=true},
    # TODO calc lib subpath
    {do="path.elements",   from_="fpath", roots=["{bib}"]},
]
depends_on = [
    # {task="orphans::_.filesystem", inject={fpath="lib_sub", fstem="fstem"} },
]
actions = [
        #

        # write to {orphans}/{fstem}.bib.files
        # append to {orphans}/bib.files

]
cleanup = [
        "orphans::_.report",
        # clear postbox
]



[[tasks.orphans]]
name               = "_.filesystem"
doc                = ["walk the library filesystem, summarising all existing files"]
cli                = [{ name="fpath", type="str", prefix="-", default="{lib-root}", desc="", positional=false  }]
fpath              = "{lib-root}"
ctor               = "task"
version            = "0.1"
# required_for       = [{loc="{orphans}/{fstem}.fs.files", file=true}]
roots              = ["{lib-root}/{fstem}"]
exts               = [".pdf", ".epub"]
recursive          = true
actions            = [
    {do="path.elements", from_="fpath" },
    {do="log", msg="Walking: {lib-root}/{fstem}"},
    {do="job.walk", update_="walked"}, # TODO: or use fdfind
    {do="taskcode.orphans:format_filelist", from_="walked", update_="files"},
    {do="append!", args=["{files}"], to="{orphans}/{fstem}.fs.files" }
]

[[tasks.orphans]]
name         = "_.report"
doc          = ["reports a diff of bib referenced files against the filesystem"]
ctor         = "task"
priority     = 1
# depends_on = ["file:>{orphans}/bib.files", "file:>{orphans}/fs.files"]
actions      = [
        # read file lists
        {do="read", from="{orphans}/bib.files", type="lines",  update_="bib"},
        {do="read", from="{orphans}/fs.files",  type="lines",  update_="fs"},
        # diff them
        {do="taskcode.orphans:diff_filelists"},
        # write results:
        {do="write!", from_="only_mentioned", to="{orphans}/only_mentioned.files"},
        {do="write!", from_="only_exists",    to="{orphans}/only_exists.files"},
]
