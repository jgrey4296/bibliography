

[[locations]]
bib_export = "{export}/bib"
cal_export = "{export}/calendar"


[[tasks.export]]
name                 = "all"
version              = "0.1"                                                                # <str>
ctor                 = "job"                                                                # <type>
doc                  = ["Load each bib file and prep it for export"]                               # <list[str]>
print_levels         = {action="WARN", execute="WARN"}                                      # <Dict: {'action', 'execute', 'build', 'sleep', 'head'}>
roots                = ["{bib}"]                                                            # <list[str|pl.Path]>  Places the job:walker will start
exts                 = [".bib"]                                                             # <list[str]>
actions = [
        {do="job.walk", update_="files"}, # walk,
        {do="job.expand", from_="files", update_="tasks", inject={replace=["fpath"]}, base_="sub_actions"},
        {do="job.inject.path", onto_="tasks", key_="fpath"},
        {do="job.queue", from_="tasks"}, # queue
]
sub_actions          = [
                     { do="dootle.bibtex.v2:BibtexInitAction",   update_="bib_db"},
                     { do="taskcode.bibtex:build_working_parse_stack",  update_="parse_stack"},
                     { do="taskcode.bibtex:build_export_write_stack",   update_="write_stack" },
                     { do="dootle.bibtex.v2:BibtexLoadAction",   from_="fpath",     update_="bib_db",   parse_stack_="parse_stack" },
                     { do="dootle.bibtex.v2:BibtexToStrAction",  from_="bib_db",    update_="bib_text", write_stack_="write_stack" },
                     { do="write!", from_="bib_text", to="{bib_export}/{fname}"},
                     { do="dootle.bibtex.v2:BibtexFailedBlocksWriteAction", target="{bib_export}/failed/{fstem}.bib" },
]

[[tasks.export]]
name                 = "some"
version              = "0.1"                                                                # <str>
ctor                 = "job"                                                                # <type>
doc                  = ["export a selection from the main database"]
print_levels         = {action="WARN", execute="WARN"}                                      # <Dict: {'action', 'execute', 'build', 'sleep', 'head'}>
roots                = ["{bib}"]                                                            # <list[str|pl.Path]>  Places the job:walker will start
exts                 = [".bib"]                                                             # <list[str]>
actions = [
        {do="job.walk", update_="files"}, # walk,
        {do="job.expand", from_="files", update_="tasks", inject={replace=["fpath"]}, base_="sub_actions"},
        {do="job.inject.path", onto_="tasks", key_="fpath"},
        {do="job.queue", from_="tasks"}, # queue
]
sub_actions          = [
                     { do="dootle.bibtex.v2:BibtexInitAction",   update_="bib_db"},
                     # TODO build selector stack
                     # { do="taskcode.bibtex:build_working_parse_stack",  update_="parse_stack"},
                     { do="taskcode.bibtex:build_export_write_stack",   update_="write_stack" },
                     { do="dootle.bibtex.v2:BibtexLoadAction",   from_="fpath",     update_="bib_db",   parse_stack_="parse_stack" },
                     { do="dootle.bibtex.v2:BibtexToStrAction",  from_="bib_db",    update_="bib_text", write_stack_="write_stack" },
                     { do="write!", from_="bib_text", to="{bib_export}/{fname}"},
                     { do="dootle.bibtex.v2:BibtexFailedBlocksWriteAction", target="{bib_export}/failed/{fstem}.bib" },
]

[[tasks.export]]
name    = "calendar"
version = "0.1"
ctor    = "job"
doc     = ["create a calendar of when entries were added to the db"]
