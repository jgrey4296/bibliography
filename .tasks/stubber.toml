## stubber.toml -*- mode: conf-toml -*-

[[locations]]
todo_bib   = {file="~/github/bibliography/in_progress/todo.bib"}
dropbox    = "~/Dropbox/docs"
downloads  = "~/Downloads"
todo_pdfs  = "/media/john/data/todo/pdfs"

[[tasks.stub]]
name                 = "files"
version              = "0.1"                                 # <str>
doc                  = ["Move pdfs and epubs into working directory, create stub entry for each one"]
ctor                 = "job"                                # <str>
queue_behaviour      = "default"                             # <str>                default | auto | reactive
exts                 = [".pdf", ".epub"]                     # <list[str]>
roots                = ["{dropbox}"]                         # <list[str|pl.Path]>  Places the Walker will start
recursive            = false                                 # <bool>
target               = "{todo_pdfs}/{fname}"
accept_fn            = "taskcode.stubber:not_copied"
cleanup         = [
    {do="post.get", stubs="stub::files..-"},
    {do="taskcode.stubber:join_stubs", from_="stubs", update_="text"},
    {do="doot.actions.io:AppendAction", args=["{text}"], sep="\n", to="{todo_bib}" },
]
actions              = [
        {do="job.walk", update_="files", fn_="accept_fn"}, # walk,
        {do="job.expand", from_="files", update_="tasks", inject={replace=["fpath"]}, template_="sub_actions"},
        {do="job.inject.path.elements", onto_="tasks", key_="fpath"},
        {do="job.queue", from_="tasks"}, # queue
]
sub_actions          = [
                     {do="exists?", args=["{dest}"]},
                     {do="copy", from_="fpath", to="{todo_pdfs}/{fname}"},
                     {do="taskcode.stubber:gen_stub", update_="stubtext", to="{todo_pdfs}/{fname}"},
                     {do="post.put", args=["{stubtext}"]},
                     {do="delete!", args=["{fpath}"]},
]

[[tasks.stub]]
name        = "cleanup"
version     = "0.1"
doc         = ["Cleanup refiled pdfs and epubs"]
ctor        = "job"
accept_fn   = "taskcode.stubber:select_refiled"
roots       = ["{todo_pdfs}"]
recursive   = false
actions     = [
            {do="job.walk", update_="files", fn_="accept_fn"}, # walk,
            {do="job.expand", from_="files", update_="tasks", inject={replace=["fpath"]}, template_="sub_actions"},
            {do="job.queue", from_="tasks"}, # queue
]
sub_actions = [
            {do="delete!", args=["{fpath}"]}
]
