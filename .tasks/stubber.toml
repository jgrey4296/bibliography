## stubber.toml -*- mode: toml -*-
doot-version = "1.0"

[[locations]]
todo_bib   = "file::>{home_repo}/submodules_/bibliography/in_progress/todo.bib"
dropbox    = "~/Dropbox/docs"
downloads  = "~/Downloads"
todo_pdfs  = "/media/john/data/todo/pdfs"

[[tasks.stub]]
name                     = "files"
version                  = "0.1" 
doc                      = ["Move pdfs and epubs into working directory, create stub entry for each one"]
ctor                     = "job" 
queue_behaviour          = "default"                             
exts                     = [".pdf", ".epub"]                     
roots                    = ["{dropbox!p}", "{downloads!p}"]      
recursive                = false                                 
out_target               = "{todo_pdfs!p}/stubbed/{fname}"
accept_fn                = "fn::taskcode.stubber:not_copied"
actions                  = [
        {do="job.walk",   update_="files", fn_="accept_fn"}, # walk,
        {do="job.expand", from_="files", update_="tasks", inject={insert=["fpath"], delay=["out_target"]}, template_="sub_actions"},
        {do="job.inject.path.elements", onto_="tasks", key_="fpath"},
        {do="job.queue", from_="tasks"}, # queue
]
sub_actions = [
        {do="log", msg="Stubbing: {fpath} to {out_target}"},
        {do="exists?", args=["{out_target!p}"], not=true},
        {do="fn::taskcode.stubber:gen_stub", update_="stubtext", to_="out_target"},
        {do="post.put", "stub::files..-"=["{stubtext}"]},
        {do="copy", from_="fpath", to_="out_target"},
        {do="delete!", args=["{fpath!p}"]},
]
cleanup = [
        {do="post.get", stubs="stub::files..-"},
        {do="fn::taskcode.stubber:join_stubs", from_="stubs", update_="text"},
        {do="doot.actions.io:AppendAction", args=["{text}"], sep="\n", to="{todo_bib!p}"},
]

[[tasks.stub]]
name        = "cleanup"
version     = "0.1"
doc         = ["Cleanup refiled pdfs and epubs"]
ctor        = "job"
accept_fn   = "taskcode.stubber:select_refiled"
roots       = ["{todo_pdfs!p}", "{todo_pdfs!p}/stubbed/", "{todo_pdfs!p}/online"]
recursive   = false
actions     = [
            {do="log", msg="Queuing Cleanup of old files"},
            {do="job.walk",   update_="files", fn_="accept_fn"}, # walk,
            {do="job.expand", from_="files", update_="tasks", inject={insert=["fpath"]}, template_="sub_actions"},
            {do="job.queue",  from_="tasks"}, # queue
]
sub_actions = [
    {do="delete!", args=["{fpath!p}"]}
]
