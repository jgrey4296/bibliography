## bibtex.toml -*- mode: conf-toml -*-

[[tasks.bib]]
name                 = "format"
version              = "0.1"                                                                # <str>
ctor                 = "job"                                                                # <type>
mixins               = ["job:limit", "job:walker"]
doc                  = ["Load each bib file and format/validate it"]                               # <list[str]>
print_levels         = { head="INFO", build="WARNING", execute="INFO", sleep="WARNING", action="WARNING" }
roots                = ["{bib}"]                                                            # <list[str|pl.Path]>  Places the job:walker will start
exts                 = [".bib"]                                                             # <list[str]>
early_select_fn      = "identity"                                                           # <callable>            : Callable[[job, spec], bool]
late_select_fn       = "taskcode.selector:oldest"                                          # <callable>            : Callable[[job, list[spec]], list[spec]. all, random, or coderef
select_limit_type    = "soft"                                                               # <str>                hard | soft
select_limit         = 10                                                                   # <int|None>
subtask              = "bib::_formatter"


[[tasks.bib]]
name             = "_formatter"
ctor             = "task"
print_levels = { head="INFO", build="WARNING", execute="INFO", sleep="WARNING", action="WARNING" }
actions          = [
                { do="dootle.bibtex.v2:BibtexInitAction",   update_="bib_db"},
                { do="taskcode.bibtex:build_working_parse_stack",  update_="parse_stack"},
                { do="taskcode.bibtex:build_working_write_stack",  update_="write_stack" },
                { do="dootle.bibtex.v2:BibtexLoadAction",   from_="fpath",     update_="bib_db",   parse_stack_="parse_stack" },
                { do="dootle.bibtex.v2:BibtexToStrAction",  from_="bib_db",    update_="bib_text", write_stack_="write_stack" },
                { do="write!", from_="bib_text", to="{fpath}"},
                { do="dootle.bibtex.v2:BibtexFailedBlocksWriteAction", target="{temp}/failed_{fstem}.bib" },
]                                                                                                                         # <str>
