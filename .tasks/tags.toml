## tags.toml -*- mode: toml-mode -*-
# Summary:
#
# Tags:
#
doot-version = "1.1"

[[locations]]
known_tag_file     = "file::>{temp}/tags/known.tags"
canon_tag_file     = "file::>{temp}/tags/canon.tags"
bkmks_tags_file    = "file::>{temp}/tags/bkmks.tags"
total_subs_file    = "file::>{temp}/tags/total.subs"

[[tasks.tags]] # compile
name         = "compile"
doc          = ["build the totals.tags file from individual tag substitution files"]
roots        = ["{substitutions!p}/general"]
exts         = [".sub"]
recursive    = false
# required_for = ["file::>{known_tag_file!p}", "file::>{canon_tag_file!p}", "file::>{total_subs_file!p}"]
depends_on   = [
    "file::>.temp/tags/*.tags",
    # Skip if totals.tags was modified today
    {do="dootle.utils:skip_if_recent", target="{canon_tag_file!p}"},
    # TODO use stale test against subs diretory
]
actions   = [
    # walk and read all sub files
    { do="log", msg="Reading Substitutions"},
    { do="job.walk",   update_="files"}, # collect sub files
    { do="taskcode.subs:read_subs", from_all_="files", update_="subs" },
    # -- 
    { do="log", msg="Reading Bookmarks"},
    { do="taskcode.tags:read_tags", from="{bkmks_tags_file!p}", update_="bkmk_tags" },
    # -- 
    { do="log", msg="Aggregating"},
    { do="taskcode.subs:aggregate_subs", args=["subs", "bkmk_tags"] },
    # -- 
    { do="log", msg="Writing Totals/Canon/Known"},
    # Write out to temp files
    { do="write!",  from_="total_subs", to="{total_subs_file!p}" },
    # all known, non-canon, tags
    { do="write!",  from_="known_tags", to="{known_tag_file!p}" },
    # all canon tags
    { do="write!",  from_="canon_tags", to="{canon_tag_file!p}" },
]

[[tasks.tags]] # bkmk tags
name         = "_.build.bkmks.tags"
docs         = ["Read the boomarks file, extract tags from it, write to bkmks_tags_file"]
required_for = ["file::>{bkmks_tags_file}"]
depends_on   = [
           # skip if bkmk.tags was touched today
           {do="dootle.utils:skip_if_stale", source="{bookmarks!p}", dest="{bkmks_tags_file!p}"},
]
actions = [
        {do="log", msg="Building Tags Summary from Bookmarks"},
        # read {bookmarks}
        { do="dootle.bookmarks:DoLoad", from="{bookmarks!p}", update_="total_bkmks" },
        # extract tags
        { do="taskcode.bkmk:collect_tags", from_="total_bkmks", update_="tags" },
        # write
        {do="write!", from_="tags", to="{bkmks_tags_file!p}"}
]
