
@Proceedings{74:_aisb_summer_confer_,
 title        = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 url2         = {https://aisb.org.uk/wp-content/uploads/2019/12/aisb1974.pdf},
 url          = {https://dl.acm.org/doi/proceedings/10.5555/3015486},
 file         = {/media/john/data/todo/pdfs/proceedings/aisb/aisb1974.pdf},
 year         = {1974},
 country      = {UK},
}

@inproceedings{10.5555/3015486.3015487,
 author       = {Ambler, A. P. and Popplestone, R. J.},
 title        = {Inferring the Position of Bodies from Specified Spatial Relationships},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {A program has been developed which takes a specification of a set of bodies and of spatial relations that are to hold between them in some goal state, and produces expressions denoting the positions of the bodies in the goal state, together with residual equations linking the variables in these expressions.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {1-13},
 numpages     = {13},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015488,
 author       = {Burge, John},
 title        = {AI and Sensori-Motor Intelligence},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {14-25},
 numpages     = {12},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015489,
 author       = {Davies, D. J. M.},
 title        = {Representing Negation in a Planner System},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {A program is described which carries on a dialogue with the operator, accepting English statements and questions, noting the statements and answering the questions. A method is described for representing negative information. The program goes beyond previous question-answering systems in that new information can be given in English even where this entails selectively removing older information. Universal and existential 'quantifiers* and negation may be used in both statements and questions. The treatment of the quantifiers is outlined. The program uses POPLER 1.5, a PLANNER-like system.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {26-36},
 numpages     = {11},
 keywords     = {procedures, planner, question-answering, natural language, negation, quantifiers},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015490,
 author       = {Goldstein, Ira P.},
 title        = {Understanding Simple Picture Programs},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {A collection of powerful ideas-description, plans, linearity, insertions, global knowledge and imperative semantics--are explored which are fundamental to debugging skill. To make these concepts precise, a computer monitor called MYCROFT is described that can debug elementary programs for drawing pictures. The programs are those written for LOGO turtles.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {37-49},
 numpages     = {13},
 keywords     = {linearity, program writing, debugging, planning},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015491,
 author       = {Hardy, Steven},
 title        = {Automatic Induction of LISP Functions},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {A program that infers and codes the LISP function "naturally" intended by a single input-output pair (sample computation) is described. The program uses a knowledge of LISP programming and an extended LISP system to develop and test hypotheses about the function. The program is written in POPCORN, a POP2 implementation of many of the ideas embedded in CONNIVER.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {50-62},
 numpages     = {13},
 keywords     = {CONNIVER, automatic programming, induction, LISP},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015492,
 author       = {Hayes, Patrick J.},
 title        = {Some Problems and Non-Problems in Representation Theory},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {63-79},
 numpages     = {17},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015493,
 author       = {Knapman, John},
 title        = {Programs That Write Programs and Know What They Are Doing},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {The concept of run-time structure, expounded by Stansfield(1), is explored in the light of its use in a computer program currently being developed that is to acquire a natural language. Special facilities have been provided for programs to modify and extend themselves by interacting with a record of their behaviour and experience.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {80-89},
 numpages     = {10},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015494,
 author       = {Lamontagne, C},
 title        = {Defining Some Primitives for a Computational Model of Visual Motion Perception},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {Primitive computational concepts, expressed in terms of neural nets, are created as a basis for a model of visual motion perception. These primitives are explicitly derived within the context of a complete visual system.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {90-101},
 numpages     = {12},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015495,
 author       = {Luckham, David C. and Buchanan, Jack R.},
 title        = {Automatic Generation of Programs Containing Conditional Statements},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {An experimental system for automatically generating certain simple kinds of programs is described. The programs constructed are expressed in a subset of ALGOL containing assignments, function calls, conditional statements, while loops, and non-recursive procedure calls. The system has been used to generate programs for symbolic manipulation, robot control, every day planning, and computing arithmetical functions. This system has previously been described in [Buchanan and Luckham 1974]. The present report focuses on the generation of conditional statements and describes applications to mechanical assembly and symbolic manipulation problems.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {102-126},
 numpages     = {25},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015496,
 author       = {Mackworth, Alan K.},
 title        = {Using Models to See},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {Scene analysis programs offer the hope of providing a more adequate account of human competence in interpreting line drawings as polyhedra than do the current psychological theories. This thesis has several aspects. The aspect concentrated on here is that those programs have explored a variety of methods of incorporating a priori knowledge of objects through the use of models. After outlining the range of models used and sketching some psychological theories, the various proposals are contrasted. This discussion leads to two new proposals for exploiting model information that involve elaborations of an existing program, POLY.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {127-137},
 numpages     = {11},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015497,
 author       = {Michie, Donald},
 title        = {A Theory of Evaluative Comments in Chess},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {Classical game theory partitions the set of legal chess positions into only three evaluative categories: won, drawn and lost. Yet chess players employ a wide variety of evaluative terms, distinguishing (for example) a "drawn" from a "balanced" position, a "decisive" from a "slight" advantage, and a "blunder" from a "mistake".As an extension of the classical theory, a model of fallible play is developed. Using this, two quantities can in principle be associated with each position, its "game-theoretic value" and its "expected utility". A function of these two variables can be found which yields interpretations of many evaluative terns used by chess commentators.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {138-159},
 numpages     = {22},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015498,
 author       = {Scott, P. D.},
 title        = {Cortical Embodiment of Procedures},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {160-172},
 numpages     = {13},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015499,
 author       = {Sloman, Aaron},
 title        = {On Learning about Numbers (Some Problems and Speculations.)},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {The aim of this paper is methodological and tutorial. It uses elementary number competence to show how reflection on the fine structure of familiar human abilities generates requirements exposing the inadequacy of initially plausible explanations. We have to learn how to organise our common sense knowledge and make it explicit, and we don't need experimental data so much as we need to extend our model-building know-how.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {173-185},
 numpages     = {13},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015500,
 author       = {Smith, Brian and Hewitt, Carl},
 title        = {Towards a Programming Apprentice},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {The Planner Project is constructing a Programming Apprentice to assist in knowledge based programming. We would like to provide an environment which has substantial knowledge of the semantic domain for which the programs are being written, and knowledge of the purposes that the programs are supposed to satisfy. Further, we would like to make it easy for the programmer to communicate the knowledge about the program to the Apprentice. The Apprentice is to aid in establishing and maintaining consistency of specifications, validating that modules meet their specifications, answering questions about behavioral dependencies between modules, and analyzing the implications of perturbations in modules and their specifications.A tenet of the apprentice project is that programming is a multi-level activity: as well as writing code, programmers communicate in terms of comments and models. Our goal is to elucidate and formalize some of these interactions. The first level of description we have attacked is the level of abstract descriptions of what programs do, rather than how they do it. The contracts and intentions discussed in this paper are an attempt to embody this kind of knowledge in a formal and yet intuitive and useful way. A process known as meta-evaluation is presented which can justify why a program fulfills its contract. Further research is being carried out into the role of models, background knowledge, and commentary relating these different levels of description.This work is presented using Actors, a semantic concept in which no active process is ever allowed to treat anything as an object; instead a polite request must be extended to accomplish what the activator desires.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {186-213},
 numpages     = {28},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015501,
 author       = {Stansfield, James L.},
 title        = {Active Descriptions for Representing Knowledge},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {214-223},
 numpages     = {10},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015502,
 author       = {Sussman, Gerald Jay},
 title        = {The Virtuous Nature of Bugs},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {224-237},
 numpages     = {14},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015503,
 author       = {Turner, Kenneth J.},
 title        = {Computer Perception of Curved Objects},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {Image-processing techniques are described which reduce TV pictures of curved objects to a line-drawing representation. Details are given of an application of the hierarchical synthesis technique to flexible and imperfection-tolerant recognition using such representations. Extensions of Waltz's methods are outlined which permit the analysis of real scenes of curved objects.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {238-246},
 numpages     = {9},
 keywords     = {hierarchical synthesis, image-processing, object recognition, scene analysis, curve-fitting, curved objects, segmentation, curved surfaces},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015504,
 author       = {Weir, Sylvia},
 title        = {Action Perception},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {247-256},
 numpages     = {10},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015505,
 author       = {Wilkins, David},
 title        = {A Non-Clausal Theorem Proving System},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {There are reasons to suspect that non-clausal first-order logic expressions will provide a better base for a theorem prover than conventional clausal form. A complete inference system, QUEST, for the first-order predicate calculus using expressions in prenex form is presented. Comparison of this system with SL-resolution shows that clausal techniques can be transferred to prenex form and expected advantages do seem to appear.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {257-267},
 numpages     = {11},
 keywords     = {SL-resolution, clause, prenex form, resolution},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015506,
 author       = {Wilks, Yorick},
 title        = {A Computer System for Making Inferences about Natural Language},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {The paper describes the way in which a Preference Semantics system for natural language analysis and generation tackles a difficult class of anaphoric inference problems : those requiring either analytic(conceptual) knowledge of a complex sort, or requiring weak inductive knowledge of the course of events in the real world. The method employed converts all available knowledge to a canonical template form and endeavors to create chains of non-deductive inferences from the unknowns to the possible referents. Its method for this is consistent with the overall principle of "semantic preference" used to set up the original meaning representation.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {268-283},
 numpages     = {16},
 series       = {AISB'74}
}

@inproceedings{10.5555/3015486.3015507,
 author       = {Young, Richard M.},
 title        = {Production Systems as Models of Cognitive Development},
 crossref     = {74:_aisb_summer_confer_},
 year         = {1974},
 abstract     = {A form of information processing model known as a "production system" (PS) is described. A PS is a set of rules each of the form C ⇒ A meaning that in the circumstances specified by C the subject performs action(s) A. PSs have certain advantages over other forms of model that make them especially suitable for describing cognitive development. This paper discusses their merits, with examples drawn from research into children's seriation behaviour.},
 booktitle    = {Proceedings of the 1st Summer Conference on Artificial Intelligence and Simulation of Behaviour},
 pages        = {284-295},
 numpages     = {12},
 keywords     = {production systems, piaget, cognitive development, protocol analysis},
 series       = {AISB'74}
}
